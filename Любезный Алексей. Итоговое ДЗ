# -*- coding: utf-8 -*-
"""Любезный Алексей. Итоговое ДЗ.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cmdEzcpt7wE_2z7FKHdz8zodHVg8kZZn

# Задание 1. Большие данные
"""

# импортируем необходимые библиотеки
import pandas as pd
import re
import matplotlib.pyplot as plt
import seaborn as sns
from datetime import datetime

# загрузим первый файл с курсом доллара
df = pd.read_excel('/content/drive/MyDrive/RC_F01_01_2018_T01_12_2023.xlsx')

# посмотрим общую инфу по нему
df.info()

# посмотрим, как он выглядит
df.head()

# из столбца с датой вытащим отдельно месяц и год
df['month'] = df.data.apply(lambda x: datetime.strftime(x,'%m'))
df['year'] = df.data.apply(lambda x: datetime.strftime(x,'%Y'))

# соединим их в одну строку
df['year-month'] = df['year'].map(str) + '-' + df['month']
df

# найдем средний курс доллара в каждом месяце
curs_pivot = pd.pivot_table(data=df, index='year-month', values='curs', aggfunc='mean')

# переведем столбец с индексом в формат даты для удобного построения графика
curs_pivot.index = pd.to_datetime(curs_pivot.index)

# загрузим второй файл с инфляцией
cpi = pd.read_csv('/content/drive/MyDrive/russia.index.cpi (statbureau.org).csv')

# посмотрим на общую информацию по файлу
cpi.info()

# посмотрим, как выглядят первые несколько строк
cpi.head()

# оставим только данные после 2018 года
cpi = cpi[cpi['Год']>=2018]
cpi.rename(columns={'Год': 'year'}, inplace=True)

# переведем кросс-таблицу в плоский вид
cpi_flat = cpi.melt(id_vars = ['year'])
cpi_flat

# удалим пробелы в строках с названиями месяцев
cpi_flat['variable'] = cpi_flat['variable'].str.replace(' ', '')

# напишем функцию для перевода названий месяцев в формат "ММ"
def month_convert(row):
  if row[1] == 'Январь': return '01'
  elif row[1] == 'Февраль': return '02'
  elif row[1] == 'Март': return '03'
  elif row[1] == 'Апрель': return '04'
  elif row[1] == 'Май': return '05'
  elif row[1] == 'Июнь': return '06'
  elif row[1] == 'Июль': return '07'
  elif row[1] == "Август": return '08'
  elif row[1] == 'Сентябрь': return '09'
  elif row[1] == 'Октябрь': return '10'
  elif row[1] == 'Ноябрь': return '11'
  elif row[1] == 'Декабрь': return '12'

cpi_flat['variable'] = cpi_flat.apply(month_convert, axis=1)

# поменяем названия столбцов
cpi_flat.columns = ['year', 'month', 'cpi']

# создадим новый столбец в формате "ГГГГ-ММ"
cpi_flat['year-month'] = cpi_flat['year'].map(str) + '-' + cpi_flat['month']

# оставим в таблице только два необходимых столбца
cpi_flat = cpi_flat[['year-month', 'cpi']]

# отсортируем по возрастанию
cpi_flat.sort_values(by='year-month', inplace=True)

# переведем дату в столбец индекса нашей таблицы и затем переведем индексы в формат даты для удобного построения графика
cpi_flat.set_index('year-month', inplace=True)
cpi_flat.index = pd.to_datetime(cpi_flat.index)

# выберем цвета для графиков
col1 = 'tab:blue'
col2 = 'tab:red'

# определим графики
fig,ax = plt.subplots()

# добавим первую линию с курсом доллара на график
ax.plot(curs_pivot.index , curs_pivot['curs'] , color=col1)

# добавим название оси x
ax.set_xlabel('year', fontsize=14)

# добавим название оси y для курса доллара
ax.set_ylabel('USD/RUR', color=col1, fontsize=14)

# добавим вторую ось y, которая будет построена на имеющейся оси x
ax2 = ax.twinx ()

# добавим вторую линию с инфляцией на график
ax2.plot(cpi_flat.index , cpi_flat['cpi'] , color=col2)

# добавим название для второй оси y
ax2.set_ylabel('CPI', color=col2, fontsize=16)

# добавим название графика
plt.title('Курс доллара и инфляция в России в период 2018–2023 гг., месячные данные')
plt.show()

"""На графике ярко выражено одновременное повышение и курса доллара (падение рубля), и инфляции в начале 2022 года, а затем такое же одновременное падение инфляции и курса доллара.

При этом наблюдаются и разнонаправленные изменения:
- вторая половина 2019 года: падение курса доллара и рост цен в экономике;
- весь 2023 год: боковик по инфляции даже с учетом ускоренных темпов в последние месяцы 2023 года. Отсутствует устойчивый тренд по инфляции именно благодаря действиям Банка России в виде повышения ключевой ставки. При этом курс доллара показывал уверенный рост, начиная со второй половины 2022 года.
"""

key_rate = pd.read_excel('/content/drive/MyDrive/Ключевая ставка ЦБ.xlsx')
key_rate.head()

key_rate['month'] = key_rate['Дата'].apply(lambda x: datetime.strftime(x,'%m'))
key_rate['year'] = key_rate['Дата'].apply(lambda x: datetime.strftime(x,'%Y'))

# соединим их в одну строку
key_rate['year-month'] = key_rate['year'].map(str) + '-' + key_rate['month']
key_rate

key_rate_pivot = pd.pivot_table(data=key_rate, index='year-month', values='Ставка', aggfunc='mean')
key_rate_pivot.sort_index(inplace=True)
key_rate_pivot.index = pd.to_datetime(key_rate_pivot.index)
key_rate_pivot.head()

# выберем цвета для графиков
col1 = 'tab:green'
col2 = 'tab:red'

# определим графики
fig,ax = plt.subplots()

# добавим первую линию на график
ax.plot(key_rate_pivot.index , key_rate_pivot['Ставка'] , color=col1)

# добавим название оси x
ax.set_xlabel('year', fontsize=14)

# добавим название оси y
ax.set_ylabel('Key rate', color=col1, fontsize=14)

# добавим вторую ось y, которая будет построена на имеющейся оси x
ax2 = ax.twinx ()

# добавим вторую линию с инфляцией на график
ax2.plot(cpi_flat.index , cpi_flat['cpi'] , color=col2)

# добавим название для второй оси y
ax2.set_ylabel('CPI', color=col2, fontsize=16)

# добавим название графика
plt.title('Ключевая ставка и инфляция в России в период 2018–2023 гг., месячные данные')
plt.show()

"""На этом графике видно, как изменение ключевой ставки воздействует на инфляцию:
- начало 2019 года — сокращение темпов инфляции позволяет смягчить кредитно-денежную политику и постепенно понизить ключевую ставку для стимулирования экономической активности в стране.
- это продолжалось ровно до начала пандемии в начале 2020 года — и как только инфляция скакнула вверх, власти сразу же начали повышать ставку.
- аналогично с началом СВО в 2022 году и экономическими последствиями в 2023 году.

# Задание 2. Визуализация в Tableau

Выводы по дашборду:
Nintendo является одним из мировых лидеров по созданию видеоигр:
- Nintendo постоянно находится в Топ-3 компаний по объему продаж видеоигр на протяжении 1983-2016 гг. во всех имеющихся жанрах видеоигр: от спорта до стратегий.
- компания занимает 1 место по общему объему продаж в Северной Америке, Европе и Японии. Так, в Северной Америке Nintendo по этому показателю опережает ближайшего конкурента - Electronic Arts - на 39,6%. В Европе отрыв между 1 и 2 местом (также с Electronic Arts) +13,8%. В Японии Nintendo опережает ближайшего конкурента - Namco Bandai Games - на +258,8%.
"""
